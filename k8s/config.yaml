apiVersion: apps/v1
kind: Deployment
metadata:
  name: $NAME_CI
  namespace: default
  labels:
    name: $NAME_CI
spec:
  replicas: 2
  selector:
    matchLabels:
      name: $NAME_CI
  template:
    metadata:
      labels:
        name: $NAME_CI
    spec:
      containers:
        - name: $NAME_CI
          image: $IMAGE_TAG
          ports:
            - containerPort: 5000

          resources:
            limits:
              memory: 512Mi
              cpu: '0.5'
            requests:
              memory: 256Mi
              cpu: '0.3'

          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: jupiter-secret-postgres
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jupiter-secret-postgres
                  key: password
            - name: POSTGRES_SCHEMA
              valueFrom:
                secretKeyRef:
                  name: jupiter-secret-postgres
                  key: database
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: jupiter-secret-postgres
                  key: host
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: jupiter-secret-redis
                  key: REDIS_HOST

        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:latest
          command:
            - '/cloud_sql_proxy'
            - '-instances=parleyhub-323409:asia-east2:jupiter-postgres=tcp:5432'
            - '-credential_file=/secrets/cloudsql/credentials.json'
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: $NAME_CI
              mountPath: /secrets/cloudsql
              readOnly: true
          resources:
            limits:
              memory: 512Mi
              cpu: '0.5'
            requests:
              memory: 256Mi
              cpu: '0.3'

      volumes:
        - name: $NAME_CI
          secret:
            secretName: cloudsql-secret-sa

---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: $NAME_CI
  name: $NAME_CI
spec:
  type: ClusterIP
  selector:
    name: $NAME_CI
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $NAME_CI
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: 'false'
    nginx.ingress.kubernetes.io/rewrite-target: /
  namespace: default
spec:
  tls:
    - hosts:
        - $DOMAIN
      secretName: jupiter-secret-tls
  rules:
    - host: $DOMAIN
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: $NAME_CI
                port:
                  number: 80
